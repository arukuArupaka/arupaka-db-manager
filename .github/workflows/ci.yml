name: Build & Deploy to Render (PR Comment Trigger)

on:
  issue_comment:
    types: [created]

permissions:
  issues: write

jobs:
  deploy:
    if: |
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '.stg-deploy')
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
      LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
      LINE_GROUP_ID: ${{ secrets.LINE_GROUP_ID }}
      FIREBASE_ADMIN_SDK: ${{ secrets.FIREBASE_ADMIN_SDK }}
      CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

    steps:
      - name: React with ðŸ‘€ when starting
        if: github.event.issue.pull_request
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            })

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node.js & pnpm cache
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"
          cache-dependency-path: "nestJS/pnpm-lock.yaml"

      - name: Install dependencies
        working-directory: ./nestJS
        run: pnpm install

      - name: Build NestJS
        working-directory: ./nestJS
        run: |
          pnpm run generate
          pnpm run migrate
          pnpm run build

      - name: Deploy to Render
        run: |
          curl "$RENDER_DEPLOY_HOOK_URL"

      - name: React with ðŸš€ after success
        if: github.event.issue.pull_request
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            })
